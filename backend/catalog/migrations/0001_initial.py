# Generated by Django 5.2.5 on 2025-08-21 12:59

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(help_text='브랜드명', max_length=100)),
                ('model_code', models.CharField(help_text='모델 코드', max_length=100)),
                ('name', models.CharField(help_text='상품명', max_length=500)),
                ('gtin', models.CharField(blank=True, help_text='GTIN (Global Trade Item Number)', max_length=50, null=True)),
                ('spec_hash', models.CharField(blank=True, help_text='상품 스펙 해시', max_length=64, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'catalog_product',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['brand', 'model_code'], name='catalog_pro_brand_d59083_idx'), models.Index(fields=['gtin'], name='catalog_pro_gtin_10f25d_idx')],
                'unique_together': {('brand', 'model_code')},
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marketplace', models.CharField(help_text='마켓플레이스명 (쿠팡, 11번가 등)', max_length=50)),
                ('seller', models.CharField(help_text='판매자명', max_length=100)),
                ('price', models.DecimalField(decimal_places=0, help_text='상품 가격', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('shipping_fee', models.DecimalField(decimal_places=0, default=Decimal('0'), help_text='배송비', max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('coupon_hint', models.TextField(blank=True, help_text='쿠폰 정보', null=True)),
                ('url', models.URLField(help_text='상품 URL', max_length=1000)),
                ('affiliate_url', models.URLField(blank=True, help_text='제휴 링크', max_length=1000, null=True)),
                ('fetched_at', models.DateTimeField(auto_now_add=True, help_text='수집 시각')),
                ('product', models.ForeignKey(help_text='연결된 상품', on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='catalog.product')),
            ],
            options={
                'db_table': 'catalog_offer',
                'ordering': ['-fetched_at'],
            },
        ),
        migrations.CreateModel(
            name='Watch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField(help_text='사용자 ID')),
                ('target_price', models.DecimalField(decimal_places=0, help_text='목표 가격', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('is_active', models.BooleanField(default=True, help_text='활성화 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(help_text='모니터링할 상품', on_delete=django.db.models.deletion.CASCADE, related_name='watches', to='catalog.product')),
            ],
            options={
                'db_table': 'catalog_watch',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=0, help_text='기록된 가격', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('total_price', models.DecimalField(decimal_places=0, help_text='기록된 총 가격', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('recorded_at', models.DateTimeField(auto_now_add=True, help_text='기록 시각')),
                ('offer', models.ForeignKey(help_text='연결된 오퍼', on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='catalog.offer')),
            ],
            options={
                'db_table': 'catalog_pricehistory',
                'ordering': ['-recorded_at'],
                'indexes': [models.Index(fields=['offer_id', '-recorded_at'], name='catalog_pri_offer_i_cf9833_idx'), models.Index(fields=['-recorded_at'], name='catalog_pri_recorde_8f7514_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='offer',
            index=models.Index(fields=['product_id', 'marketplace', '-fetched_at'], name='catalog_off_product_f46abd_idx'),
        ),
        migrations.AddIndex(
            model_name='offer',
            index=models.Index(fields=['marketplace', '-fetched_at'], name='catalog_off_marketp_690ada_idx'),
        ),
        migrations.AddIndex(
            model_name='watch',
            index=models.Index(fields=['user_id', 'product_id'], name='catalog_wat_user_id_2b5a79_idx'),
        ),
        migrations.AddIndex(
            model_name='watch',
            index=models.Index(fields=['user_id', '-created_at'], name='catalog_wat_user_id_318c0f_idx'),
        ),
    ]
